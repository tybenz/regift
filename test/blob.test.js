// Generated by CoffeeScript 1.7.1
(function() {
  var Blob, fixtures, git, should;

  should = require('should');

  fixtures = require('./fixtures');

  git = require('../src');

  Blob = require('../src/blob');

  describe("Blob", function() {
    describe("constructor", function() {
      var blob, repo;
      repo = fixtures.branched;
      blob = new Blob(repo, {
        name: "X",
        mode: "Y",
        id: "abc"
      });
      it("assigns @name", function() {
        return blob.name.should.eql("X");
      });
      it("assigns @mode", function() {
        return blob.mode.should.eql("Y");
      });
      return it("assigns @id", function() {
        return blob.id.should.eql("abc");
      });
    });
    describe("#data", function() {
      describe("of a file off the root", function() {
        var data, repo;
        repo = git("" + __dirname + "/fixtures/branched");
        data = null;
        before(function(done) {
          return repo.tree().blobs(function(err, blobs) {
            return blobs[0].data(function(err, _data) {
              data = _data;
              return done(err);
            });
          });
        });
        return it("is a string", function() {
          data.should.be.type("string");
          return data.should.containEql("Bla");
        });
      });
      return describe("of a file in a subdir", function() {
        var data, repo;
        repo = git("" + __dirname + "/fixtures/branched");
        data = null;
        before(function(done) {
          return repo.tree().trees(function(err, trees) {
            return trees[0].blobs(function(err, blobs) {
              return blobs[0].data(function(err, _data) {
                data = _data;
                return done(err);
              });
            });
          });
        });
        return it("is a string", function() {
          data.should.be.type("string");
          return data.should.containEql("!!!");
        });
      });
    });
    return describe("#dataStream", function() {
      describe("of a file off the root", function() {
        var data, repo;
        repo = git("" + __dirname + "/fixtures/branched");
        data = "";
        before(function(done) {
          return repo.tree().blobs(function(err, blobs) {
            var dataStream, _, _ref;
            _ref = blobs[0].dataStream(), dataStream = _ref[0], _ = _ref[1];
            return dataStream.on('data', function(buf) {
              return data += buf.toString();
            }).on('end', function() {
              return done();
            });
          });
        });
        return it("is a string", function() {
          data.should.be.type("string");
          return data.should.containEql("Bla");
        });
      });
      return describe("of a file in a subdir", function() {
        var data, repo;
        repo = git("" + __dirname + "/fixtures/branched");
        data = "";
        before(function(done) {
          return repo.tree().trees(function(err, trees) {
            return trees[0].blobs(function(err, blobs) {
              var dataStream, _, _ref;
              _ref = blobs[0].dataStream(), dataStream = _ref[0], _ = _ref[1];
              return dataStream.on('data', function(buf) {
                return data += buf.toString();
              }).on('end', function() {
                return done();
              });
            });
          });
        });
        return it("is a string", function() {
          data.should.be.type("string");
          return data.should.containEql("!!!");
        });
      });
    });
  });

}).call(this);
